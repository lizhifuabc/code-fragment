# ========================= 日志配置 =========================
# 全局日志级别设置为INFO，可选值：TRACE < DEBUG < INFO < WARN < ERROR < FATAL
logging.level.root=INFO
# 指定包的日志级别为DEBUG，可以查看更详细的日志信息
logging.level.io.github.lizhifuabc.log=DEBUG

# ========================= 日志输出格式 =========================
# 控制台日志输出格式保持原样，便于开发调试
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n
# 文件日志输出为JSON格式，包含时间戳、日志级别、线程名、类名等信息
logging.pattern.file={"timestamp":"%d{yyyy-MM-dd HH:mm:ss.SSS}","level":"%-5level","thread":"%thread","logger":"%logger{36}","message":%msg}%n

# ========================= 日志文件配置 =========================
# 日志文件名及路径，可以是相对路径也可以是绝对路径
logging.file.name=logs/spring-boot-log.log
# 单个日志文件的最大大小，超过这个大小会自动切分
logging.logback.rollingpolicy.max-file-size=10MB
# 日志文件保留的天数，超过这个天数的日志文件会被删除
logging.logback.rollingpolicy.max-history=7
# 日志文件的命名模式：
# %d{yyyy-MM-dd} - 日期
# %i - 索引号，从0开始
logging.logback.rollingpolicy.file-name-pattern=logs/spring-boot-log-%d{yyyy-MM-dd}.%i.log

# ========================= Spring Boot Actuator配置 =========================
# 开启所有监控端点，包括health、info、metrics等
management.endpoints.web.exposure.include=*
# 显示详细的健康检查信息，包括磁盘空间、数据库连接等状态
management.endpoint.health.show-details=always